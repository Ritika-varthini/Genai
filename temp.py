# -*- coding: utf-8 -*-
"""temp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ibNWlVfD6KexMOVdup8wOzkZ5cOa6myM
"""

import numpy as np
import pandas as pd
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout, Input
from sklearn.preprocessing import MinMaxScaler

# Generate dummy temperature data
np.random.seed(0)
days = 200
temps = 30 + 5 * np.sin(np.linspace(0, 50, days)) + np.random.normal(0, 0.5, days)
df = pd.DataFrame(temps, columns=['Temp'])

# Scale data
scaler = MinMaxScaler()
scaled_temps = scaler.fit_transform(df)

# Prepare sequences
X, y = [], []
window_size = 10
for i in range(window_size, len(scaled_temps)):
    X.append(scaled_temps[i - window_size:i, 0])
    y.append(scaled_temps[i, 0])

X, y = np.array(X), np.array(y)
X = X.reshape((X.shape[0], X.shape[1], 1))

# Build and train LSTM model
model = Sequential([
    Input(shape=(window_size, 1)),
    LSTM(50, return_sequences=False),
    Dropout(0.2),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse')
model.fit(X, y, epochs=30, batch_size=16, verbose=0)

# Save as .keras file
model.save("temperature_forecast_model.keras")

# Download the model file
from google.colab import files
files.download("temperature_forecast_model.keras")