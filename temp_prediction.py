# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E5ZjSeUJOwcUoeRu06TABOJAAptZUuEA
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import gradio as gr
from tensorflow.keras.models import Sequential, load_model
from tensorflow.keras.layers import LSTM, Dense, Dropout, Input
from sklearn.preprocessing import MinMaxScaler

# ‚úÖ Generate dummy temperature data
np.random.seed(0)
days = 200
temps = 30 + 5 * np.sin(np.linspace(0, 50, days)) + np.random.normal(0, 0.5, days)
df = pd.DataFrame(temps, columns=['Temp'])

# ‚úÖ Scale data
scaler = MinMaxScaler()
scaled_temps = scaler.fit_transform(df)

# ‚úÖ Prepare sequences
X, y = [], []
window_size = 10
for i in range(window_size, len(scaled_temps)):
    X.append(scaled_temps[i - window_size:i, 0])
    y.append(scaled_temps[i, 0])

X, y = np.array(X), np.array(y)
X = X.reshape((X.shape[0], X.shape[1], 1))

# ‚úÖ Build LSTM model
model = Sequential([
    Input(shape=(window_size, 1)),
    LSTM(50, return_sequences=False),
    Dropout(0.2),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse')
model.fit(X, y, epochs=30, batch_size=16, verbose=0)

# ‚úÖ Save the model in .keras format
model.save("temperature_forecast_model.keras")

# ‚úÖ Define prediction function for Gradio
def predict_next_temperature(input_sequence):
    try:
        input_seq = np.array([float(i) for i in input_sequence.split(',')])
    except:
        return "Error: Please enter valid numeric values separated by commas."

    if len(input_seq) != window_size:
        return f"Please enter exactly {window_size} comma-separated temperature values."

    input_seq = scaler.transform(input_seq.reshape(-1, 1)).reshape(1, window_size, 1)
    pred = model.predict(input_seq, verbose=0)[0][0]
    return f"Next Predicted Temperature: {scaler.inverse_transform([[pred]])[0][0]:.2f}¬∞C"

# ‚úÖ Gradio UI
demo = gr.Interface(
    fn=predict_next_temperature,
    inputs=gr.Textbox(lines=1, placeholder="Enter last 10 temperatures separated by commas"),
    outputs="text",
    title="üå°Ô∏è Temperature Forecasting using LSTM",
    description="Enter the last 10 temperature values (comma-separated) to predict the next one."
)

# ‚úÖ Launch the Gradio app
demo.launch()